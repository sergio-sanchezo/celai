image: python:3.7.4-alpine3.10

definitions: 
  steps:
    - step: &tag-container-image
        name: Build and Push Docker Image to ECR
        caches:
          - docker
        script:
          - docker build -t ${CONTAINER_NAME} .
          - pipe: atlassian/aws-ecr-push-image:2.4.2
            variables:
              AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
              AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
              AWS_DEFAULT_REGION: $AWS_REGION
              IMAGE_NAME: ${CONTAINER_NAME}
              
    - step: &deploy-to-aws
        name: Deploy to ECS
        script:
          - echo $ECS_TASK_DEFINITION > task-definition.json
          - pipe: atlassian/aws-ecs-deploy:1.12.2
            variables:
              AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
              AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
              AWS_DEFAULT_REGION: $AWS_REGION
              CLUSTER_NAME: $ECS_CLUSTER
              SERVICE_NAME: $ECS_SERVICE
              TASK_DEFINITION: task-definition.json
              FORCE_NEW_DEPLOYMENT: "true"

pipelines:
  branches:
    netline:
      - stage:
            name: 'Build and Deploy to Netline Dev'
            deployment: "netline-dev" 
            steps: 
              - step: *tag-container-image
              - step: *deploy-to-aws
    airfibra:
      - stage:
            name: Build and Deploy to AirFibra Dev
            deployment: "airfibra-dev" 
            steps:
              - step: *tag-container-image
              - step: *deploy-to-aws
    develop:
      - stage:
            name: 'Build and Deploy to Netline Dev'
            deployment: "netline-dev" 
            steps: 
              - step: *tag-container-image
              - step: *deploy-to-aws
    main:
      - stage:
            name: Build and Deploy to Production
            deployment: "production" 
            steps:
              - step: *tag-container-image
              - step: *deploy-to-aws
      
  custom:
    deploy-development-netline:
      - stage:
            name: 'Build and Deploy to Netline Dev'
            deployment: "netline-dev" 
            steps: 
              - step: *tag-container-image
              - step: *deploy-to-aws
